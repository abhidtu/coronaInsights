/*
 * This file is generated by jOOQ.
 */
package com.corona.insights.jooq.corona_insights.tables.records;


import com.corona.insights.jooq.corona_insights.tables.ZipCodeMapping;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipCodeMappingRecord extends UpdatableRecordImpl<ZipCodeMappingRecord> implements Record8<Integer, String, String, BigDecimal, BigDecimal, Integer, Boolean, String> {

    private static final long serialVersionUID = 1934648478;

    /**
     * Setter for <code>corona_insights.zip_code_mapping.Zip</code>.
     */
    public ZipCodeMappingRecord setZip(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.Zip</code>.
     */
    public Integer getZip() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.City</code>.
     */
    public ZipCodeMappingRecord setCity(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.City</code>.
     */
    public String getCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.State</code>.
     */
    public ZipCodeMappingRecord setState(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.State</code>.
     */
    public String getState() {
        return (String) get(2);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.Latitude</code>.
     */
    public ZipCodeMappingRecord setLatitude(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.Latitude</code>.
     */
    public BigDecimal getLatitude() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.Longitude</code>.
     */
    public ZipCodeMappingRecord setLongitude(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.Longitude</code>.
     */
    public BigDecimal getLongitude() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.Timezone</code>.
     */
    public ZipCodeMappingRecord setTimezone(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.Timezone</code>.
     */
    public Integer getTimezone() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.Daylight_savings_time_flag</code>.
     */
    public ZipCodeMappingRecord setDaylightSavingsTimeFlag(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.Daylight_savings_time_flag</code>.
     */
    public Boolean getDaylightSavingsTimeFlag() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>corona_insights.zip_code_mapping.geopoint</code>.
     */
    public ZipCodeMappingRecord setGeopoint(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>corona_insights.zip_code_mapping.geopoint</code>.
     */
    public String getGeopoint() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, BigDecimal, BigDecimal, Integer, Boolean, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, BigDecimal, BigDecimal, Integer, Boolean, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.ZIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.LATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.LONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.TIMEZONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.DAYLIGHT_SAVINGS_TIME_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ZipCodeMapping.ZIP_CODE_MAPPING.GEOPOINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getZip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getDaylightSavingsTimeFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getGeopoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getZip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getDaylightSavingsTimeFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getGeopoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value1(Integer value) {
        setZip(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value2(String value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value3(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value4(BigDecimal value) {
        setLatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value5(BigDecimal value) {
        setLongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value6(Integer value) {
        setTimezone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value7(Boolean value) {
        setDaylightSavingsTimeFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord value8(String value) {
        setGeopoint(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipCodeMappingRecord values(Integer value1, String value2, String value3, BigDecimal value4, BigDecimal value5, Integer value6, Boolean value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ZipCodeMappingRecord
     */
    public ZipCodeMappingRecord() {
        super(ZipCodeMapping.ZIP_CODE_MAPPING);
    }

    /**
     * Create a detached, initialised ZipCodeMappingRecord
     */
    public ZipCodeMappingRecord(Integer zip, String city, String state, BigDecimal latitude, BigDecimal longitude, Integer timezone, Boolean daylightSavingsTimeFlag, String geopoint) {
        super(ZipCodeMapping.ZIP_CODE_MAPPING);

        set(0, zip);
        set(1, city);
        set(2, state);
        set(3, latitude);
        set(4, longitude);
        set(5, timezone);
        set(6, daylightSavingsTimeFlag);
        set(7, geopoint);
    }
}
