/*
 * This file is generated by jOOQ.
 */
package com.corona.insights.jooq.corona_insights.tables;


import com.corona.insights.jooq.corona_insights.CoronaInsights;
import com.corona.insights.jooq.corona_insights.Indexes;
import com.corona.insights.jooq.corona_insights.Keys;
import com.corona.insights.jooq.corona_insights.tables.records.DistrictWiseRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistrictWise extends TableImpl<DistrictWiseRecord> {

    private static final long serialVersionUID = 1577108819;

    /**
     * The reference instance of <code>corona_insights.district_wise</code>
     */
    public static final DistrictWise DISTRICT_WISE = new DistrictWise();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DistrictWiseRecord> getRecordType() {
        return DistrictWiseRecord.class;
    }

    /**
     * The column <code>corona_insights.district_wise.id</code>.
     */
    public final TableField<DistrictWiseRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>corona_insights.district_wise.reporting_date</code>.
     */
    public final TableField<DistrictWiseRecord, Date> REPORTING_DATE = createField("reporting_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>corona_insights.district_wise.country</code>.
     */
    public final TableField<DistrictWiseRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(11).nullable(false), this, "");

    /**
     * The column <code>corona_insights.district_wise.state</code>.
     */
    public final TableField<DistrictWiseRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR(11).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>corona_insights.district_wise.district</code>.
     */
    public final TableField<DistrictWiseRecord, String> DISTRICT = createField("district", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>corona_insights.district_wise.confirmed</code>.
     */
    public final TableField<DistrictWiseRecord, Long> CONFIRMED = createField("confirmed", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>corona_insights.district_wise.deaths</code>.
     */
    public final TableField<DistrictWiseRecord, Integer> DEATHS = createField("deaths", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>corona_insights.district_wise.recovered</code>.
     */
    public final TableField<DistrictWiseRecord, Long> RECOVERED = createField("recovered", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>corona_insights.district_wise.latitude</code>.
     */
    public final TableField<DistrictWiseRecord, BigDecimal> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DECIMAL(10, 6).nullable(false), this, "");

    /**
     * The column <code>corona_insights.district_wise.longitude</code>.
     */
    public final TableField<DistrictWiseRecord, BigDecimal> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DECIMAL(10, 6).nullable(false), this, "");

    /**
     * The column <code>corona_insights.district_wise.created_at</code>.
     */
    public final TableField<DistrictWiseRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>corona_insights.district_wise.modified_at</code>.
     */
    public final TableField<DistrictWiseRecord, Timestamp> MODIFIED_AT = createField("modified_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>corona_insights.district_wise</code> table reference
     */
    public DistrictWise() {
        this(DSL.name("district_wise"), null);
    }

    /**
     * Create an aliased <code>corona_insights.district_wise</code> table reference
     */
    public DistrictWise(String alias) {
        this(DSL.name(alias), DISTRICT_WISE);
    }

    /**
     * Create an aliased <code>corona_insights.district_wise</code> table reference
     */
    public DistrictWise(Name alias) {
        this(alias, DISTRICT_WISE);
    }

    private DistrictWise(Name alias, Table<DistrictWiseRecord> aliased) {
        this(alias, aliased, null);
    }

    private DistrictWise(Name alias, Table<DistrictWiseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DistrictWise(Table<O> child, ForeignKey<O, DistrictWiseRecord> key) {
        super(child, key, DISTRICT_WISE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CoronaInsights.CORONA_INSIGHTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DISTRICT_WISE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DistrictWiseRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_DISTRICT_WISE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DistrictWiseRecord> getPrimaryKey() {
        return Keys.KEY_DISTRICT_WISE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DistrictWiseRecord>> getKeys() {
        return Arrays.<UniqueKey<DistrictWiseRecord>>asList(Keys.KEY_DISTRICT_WISE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistrictWise as(String alias) {
        return new DistrictWise(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistrictWise as(Name alias) {
        return new DistrictWise(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DistrictWise rename(String name) {
        return new DistrictWise(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DistrictWise rename(Name name) {
        return new DistrictWise(name, null);
    }
}
