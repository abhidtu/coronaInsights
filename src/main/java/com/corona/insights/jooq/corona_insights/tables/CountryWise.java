/*
 * This file is generated by jOOQ.
 */
package com.corona.insights.jooq.corona_insights.tables;


import com.corona.insights.jooq.corona_insights.CoronaInsights;
import com.corona.insights.jooq.corona_insights.Indexes;
import com.corona.insights.jooq.corona_insights.Keys;
import com.corona.insights.jooq.corona_insights.enums.CountryWiseSource;
import com.corona.insights.jooq.corona_insights.tables.records.CountryWiseRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryWise extends TableImpl<CountryWiseRecord> {

    private static final long serialVersionUID = -1111689037;

    /**
     * The reference instance of <code>corona_insights.country_wise</code>
     */
    public static final CountryWise COUNTRY_WISE = new CountryWise();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryWiseRecord> getRecordType() {
        return CountryWiseRecord.class;
    }

    /**
     * The column <code>corona_insights.country_wise.id</code>.
     */
    public final TableField<CountryWiseRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>corona_insights.country_wise.reporting_date</code>.
     */
    public final TableField<CountryWiseRecord, Date> REPORTING_DATE = createField("reporting_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>corona_insights.country_wise.country</code>.
     */
    public final TableField<CountryWiseRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>corona_insights.country_wise.confirmed</code>.
     */
    public final TableField<CountryWiseRecord, Long> CONFIRMED = createField("confirmed", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>corona_insights.country_wise.deaths</code>.
     */
    public final TableField<CountryWiseRecord, Integer> DEATHS = createField("deaths", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>corona_insights.country_wise.recovered</code>.
     */
    public final TableField<CountryWiseRecord, Long> RECOVERED = createField("recovered", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>corona_insights.country_wise.source</code>.
     */
    public final TableField<CountryWiseRecord, CountryWiseSource> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR(11).asEnumDataType(com.corona.insights.jooq.corona_insights.enums.CountryWiseSource.class), this, "");

    /**
     * The column <code>corona_insights.country_wise.created_at</code>.
     */
    public final TableField<CountryWiseRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>corona_insights.country_wise.modified_at</code>.
     */
    public final TableField<CountryWiseRecord, Timestamp> MODIFIED_AT = createField("modified_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>corona_insights.country_wise</code> table reference
     */
    public CountryWise() {
        this(DSL.name("country_wise"), null);
    }

    /**
     * Create an aliased <code>corona_insights.country_wise</code> table reference
     */
    public CountryWise(String alias) {
        this(DSL.name(alias), COUNTRY_WISE);
    }

    /**
     * Create an aliased <code>corona_insights.country_wise</code> table reference
     */
    public CountryWise(Name alias) {
        this(alias, COUNTRY_WISE);
    }

    private CountryWise(Name alias, Table<CountryWiseRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryWise(Name alias, Table<CountryWiseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CountryWise(Table<O> child, ForeignKey<O, CountryWiseRecord> key) {
        super(child, key, COUNTRY_WISE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CoronaInsights.CORONA_INSIGHTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COUNTRY_WISE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CountryWiseRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COUNTRY_WISE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CountryWiseRecord> getPrimaryKey() {
        return Keys.KEY_COUNTRY_WISE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CountryWiseRecord>> getKeys() {
        return Arrays.<UniqueKey<CountryWiseRecord>>asList(Keys.KEY_COUNTRY_WISE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryWise as(String alias) {
        return new CountryWise(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryWise as(Name alias) {
        return new CountryWise(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryWise rename(String name) {
        return new CountryWise(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryWise rename(Name name) {
        return new CountryWise(name, null);
    }
}
